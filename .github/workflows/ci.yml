name: CI
on: [push, pull_request]
env:
  CI: true
  CARGO_TERM_COLOR: always
jobs:
  build-native:
    name: Build native code
    runs-on: ubuntu-latest
    steps:
      - name: git checkout
        uses: actions/checkout@v4
      - name: cargo cache
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: ${{runner.os}}-cargo-cache-${{hashFiles('**/Cargo.toml', '**/Cargo.lock')}}
          restore-keys: ${{runner.os}}-cargo-cache-
      - name: cargo build output cache
        uses: actions/cache@v4
        with:
          path: "**/target"
          key: ${{runner.os}}-native-cargo-target-${{github.sha}}
          restore-keys: ${{runner.os}}-native-cargo-target-
      - name: cargo build
        run: cargo build --verbose
  test-native:
    name: Test native code
    runs-on: ubuntu-latest
    needs:
      - build-native
    steps:
      - name: git checkout
        uses: actions/checkout@v4
      - name: cargo cache
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: ${{runner.os}}-cargo-cache-${{hashFiles('**/Cargo.toml', '**/Cargo.lock')}}
          restore-keys: ${{runner.os}}-cargo-cache-
      - name: cargo build output cache
        uses: actions/cache@v4
        with:
          path: "**/target"
          key: ${{runner.os}}-native-cargo-target-${{github.sha}}
          restore-keys: ${{runner.os}}-native-cargo-target-
      - name: cargo test
        run: cargo test --verbose
  build-wasm:
    name: Build WebAssembly
    runs-on: ubuntu-latest
    steps:
      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: git checkout
        uses: actions/checkout@v4
      - name: yarn cache
        uses: actions/cache@v4
        with:
          path: ~/.yarn/berry/cache
          key: ${{runner.os}}-yarn-${{hashFiles('**/yarn.lock')}}
          restore-keys: ${{runner.os}}-yarn-
      - name: cargo cache
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: ${{runner.os}}-cargo-cache-${{hashFiles('**/Cargo.toml', '**/Cargo.lock')}}
          restore-keys: ${{runner.os}}-cargo-cache-
      - name: cargo build output cache
        uses: actions/cache@v4
        with:
          path: |
            **/target
            **/dist
          key: ${{runner.os}}-wasm-cargo-target-${{github.sha}}
          restore-keys: ${{runner.os}}-wasm-cargo-target-
      - name: Install dependencies
        run: yarn
      - name: Build
        run: yarn build
  test-wasm:
    name: Test WebAssembly
    runs-on: ubuntu-latest
    needs:
      - build-wasm
    steps:
      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: git checkout
        uses: actions/checkout@v4
      - name: yarn cache
        uses: actions/cache@v4
        with:
          path: ~/.yarn/berry/cache
          key: ${{runner.os}}-yarn-${{hashFiles('**/yarn.lock')}}
          restore-keys: ${{runner.os}}-yarn-
      - name: cargo cache
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: ${{runner.os}}-cargo-cache-${{hashFiles('**/Cargo.toml', '**/Cargo.lock')}}
          restore-keys: ${{runner.os}}-cargo-cache-
      - name: cargo build output cache
        uses: actions/cache@v4
        with:
          path: |
            **/target
            **/dist
          key: ${{runner.os}}-wasm-cargo-target-${{github.sha}}
          restore-keys: ${{runner.os}}-wasm-cargo-target-
      - name: Install dependencies
        run: yarn
      - name: Test
        run: yarn test
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs:
      - build-wasm
    steps:
      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: git checkout
        uses: actions/checkout@v4
      - name: yarn cache
        uses: actions/cache@v4
        with:
          path: ~/.yarn/berry/cache
          key: ${{runner.os}}-yarn-${{hashFiles('**/yarn.lock')}}
          restore-keys: ${{runner.os}}-node${{matrix.node-version}}-yarn-
      - name: cargo cache
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: ${{runner.os}}-cargo-cache-${{hashFiles('**/Cargo.toml', '**/Cargo.lock')}}
          restore-keys: ${{runner.os}}-cargo-cache-
      - name: cargo WebAssembly build output cache
        id: cache-wasm-build-output
        uses: actions/cache@v4
        with:
          path: |
            **/target
            **/dist
          key: ${{runner.os}}-wasm-cargo-target-${{github.sha}}
      - name: Install dependencies
        run: yarn
      - name: Build WebAssembly packages
        if: ${{steps.cache-wasm-build-output != 'true'}}
        run: yarn workspace open-shmup-engine build
      - name: Check Rust formatting
        run: cargo fmt --check
      - name: Lint TypeScript
        run: yarn workspace open-shmup-sample-game lint
